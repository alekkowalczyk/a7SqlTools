<!--*********************************************************************

   Extended WPF Toolkit

   Copyright (C) 2010-2012 Xceed Software Inc.

   This program is provided to you under the terms of the Microsoft Public
   License (Ms-PL) as published at http://wpftoolkit.codeplex.com/license 

   This program can be provided to you by Xceed Software Inc. under a
   proprietary commercial license agreement for use in non-Open Source
   projects. The commercial version of Extended WPF Toolkit also includes
   priority technical support, commercial updates, and many additional 
   useful WPF controls if you license Xceed Business Suite for WPF.

   Visit http://xceed.com and follow @datagrid on Twitter.

  ********************************************************************-->
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
                    xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                    xmlns:Chromes="clr-namespace:Xceed.Wpf.Toolkit.Chromes;assembly=Xceed.Wpf.Toolkit"
                    xmlns:Converters="clr-namespace:Xceed.Wpf.Toolkit.Core.Converters;assembly=Xceed.Wpf.Toolkit"
                    xmlns:Converters1="clr-namespace:a7SqlTools.Converters"
                    xmlns:converters="clr-namespace:a7SqlTools.Converters"
                    xmlns:controls="clr-namespace:a7SqlTools.Controls">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="../CommonBrushes.xaml"/>
        <ResourceDictionary Source="ButtonsTemplates.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <Converters:InverseBoolConverter x:Key="InverseBoolConverter" />
    <converters:BoolToVisibility x:Key="b2v"></converters:BoolToVisibility>
    <converters:BoolToVisibilityReverse x:Key="b2vr"></converters:BoolToVisibilityReverse>
    <DataTemplate x:Key="DefaultWatermarkTemplate">
        <ContentControl Content="{Binding}" Foreground="Gray" Focusable="False" />
    </DataTemplate>

    <LinearGradientBrush x:Key="PopupDarkBorderBrush" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FFA3AEB9" Offset="0" />
        <GradientStop Color="#FF8399A9" Offset="0.375" />
        <GradientStop Color="#FF718597" Offset="0.375" />
        <GradientStop Color="#FF617584" Offset="1" />
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="PopupBackgroundBrush" StartPoint="0,0" EndPoint="0,1">
        <LinearGradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Offset="0" Color="#FFffffff" />
                <GradientStop Offset="1" Color="#FFE8EBED" />
            </GradientStopCollection>
        </LinearGradientBrush.GradientStops>
    </LinearGradientBrush>

    <Style x:Key="DateTimePickerToggleButtonStyle" TargetType="ToggleButton">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <Grid SnapsToDevicePixels="True">
                        <Chromes:ButtonChrome x:Name="ToggleButtonChrome"
                                       CornerRadius="0,2.75,2.75,0"
                                       RenderChecked="{Binding IsOpen, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:DateTimePicker}}"
                                       RenderEnabled="{Binding IsEnabled, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=xctk:DateTimePicker}}"
											      RenderMouseOver="{TemplateBinding IsMouseOver}"
											      RenderPressed="{TemplateBinding IsPressed}">

                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />

                                <Grid x:Name="arrowGlyph" IsHitTestVisible="False" Grid.Column="1" Margin="5">
                                    <Path Width="7" Height="4" Data="M 0,1 C0,1 0,0 0,0 0,0 3,0 3,0 3,0 3,1 3,1 3,1 4,1 4,1 4,1 4,0 4,0 4,0 7,0 7,0 7,0 7,1 7,1 7,1 6,1 6,1 6,1 6,2 6,2 6,2 5,2 5,2 5,2 5,3 5,3 5,3 4,3 4,3 4,3 4,4 4,4 4,4 3,4 3,4 3,4 3,3 3,3 3,3 2,3 2,3 2,3 2,2 2,2 2,2 1,2 1,2 1,2 1,1 1,1 1,1 0,1 0,1 z" Fill="#FF000000" />
                                </Grid>
                            </Grid>
                        </Chromes:ButtonChrome>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- =============================================================================== -->
    <!-- DateTimePicker                                                                  -->
    <!-- =============================================================================== -->

    <Style TargetType="{x:Type xctk:DateTimePicker}" x:Key="DateTimePickerStyle">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TimeWatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:a7DateTimePicker}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent" 
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <!-- Button Template -->
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="ToggleButton">
                                        <Grid>
                                            <!--Start UI-->
                                            <Grid Height="20" Width="20" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" 
                                                  Background="Transparent" 
                                                  FlowDirection="LeftToRight">
                                                <Label >AA</Label>
                                                <Border x:Name="Background" Width="18" HorizontalAlignment="Right" Background="White"  BorderBrush="{TemplateBinding BorderBrush}" >
                                                    <Image Source="../../Images/calendar.png" HorizontalAlignment="Center" Width="16" Height="16" SnapsToDevicePixels="True"></Image>
                                                </Border>
                                            </Grid>
                                            <!--End UI-->
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Button.IsMouseOver" Value="true">
                                                <Setter TargetName="Background" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                                                <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                                            </Trigger>
                                            <Trigger Property="Button.IsPressed" Value="true">
                                                <Setter TargetName="Background" Property="Background" Value="{StaticResource IsSelectedBackgroundBrush}" />
                                                <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource IsSelectedBorderBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <TextBox x:Name="TextBox"                                                                       
                                            Grid.Row="0" Grid.Column="0" 
                                                   Padding="0"
                                                   Margin="0"
                                                   Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}"
                                            BorderThickness="0"
                                                   BorderBrush="Transparent"
                                            Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" 
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                         IsReadOnly="{TemplateBinding IsTextReadOnly}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center" >
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBoxBase">
                                                        <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" 
                                             BorderBrush="{TemplateBinding BorderBrush}" 
                                             Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                                                            <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <!--<Setter Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}" Property="Background" />-->
                                                                <Setter Value="Transparent" Property="Background" />
                                                                <Setter Value="Black" Property="Foreground" />
                                                                <Setter TargetName="PART_ContentHost" Property="Background" Value="Transparent"/>
                                                            </Trigger>
                                                            <Trigger Property="IsReadOnly" Value="True">
                                                                <Setter Value="Transparent" Property="Background" />
                                                                <Setter Value="Black" Property="Foreground" />
                                                                <Setter TargetName="PART_ContentHost" Property="Background" Value="Transparent"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ToggleButton x:Name="_calendarToggleButton"
                                      Grid.Column="1"
                                      Background="Transparent"
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Margin="0"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource DropDownButtonTemplate}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" >

                                </ToggleButton>
                            </Grid>
                            <controls:a7Popup IsTopmost="True" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False">
                                <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupDarkBorderBrush}" Padding="3">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel>
                                                <Calendar x:Name="PART_Calendar" BorderThickness="0" />
                                                <xctk:TimePicker x:Name="PART_TimeUpDown"
                                                        Visibility="{TemplateBinding HasTime, Converter={StaticResource b2v}}"
                                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                        Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                                        Format="{TemplateBinding TimeFormat}"
                                                        FormatString="{TemplateBinding TimeFormatString}"
                                                        Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Watermark="{TemplateBinding TimeWatermark}"
                                                        WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" />
                                            </StackPanel>
                                            <StackPanel Visibility="{TemplateBinding TwoDatesSelectable, Converter={StaticResource b2v}}">
                                                <Calendar x:Name="PART_Calendar2" BorderThickness="0"  />
                                                <xctk:TimePicker x:Name="PART_TimeUpDown2"
                                                        Visibility="{TemplateBinding HasTime, Converter={StaticResource b2v}}"
                                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                        Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                                        Format="{TemplateBinding TimeFormat}"
                                                        FormatString="{TemplateBinding TimeFormatString}"
                                                        Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Watermark="{TemplateBinding TimeWatermark}"
                                                        WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" />
                                            </StackPanel>
                                        </StackPanel>
                                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                                            <Label x:Name="PART_LablebMonthSelection" Content="Select month..."></Label>
                                            <ComboBox x:Name="PART_MonthSelection" Width="100" Margin="3,0,0,0" Height="22" ></ComboBox>
                                            <Button HorizontalAlignment="Right" Width="70"  x:Name="PART_bSelect" Template="{StaticResource PopupButtonTemplate}" Height="22"
                                                    ToolTip="Select dates" Margin="3,0,0,0" Padding="0" BorderThickness="1,1,1,1"
                                                    Command="{TemplateBinding SelectValuesCommand}"
                                                    Visibility="{TemplateBinding IsTextReadOnly, Converter={StaticResource b2v}}" >
                                                <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Image Source="../../Images/small_ok.png" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" ></Image>
                                                    <Label FontSize="11" Padding="0" Foreground="Gray" Content="Select"></Label>
                                                </StackPanel>
                                            </Button>
                                            <Button HorizontalAlignment="Right" Width="70"  x:Name="bClear" Template="{StaticResource PopupButtonTemplate}" Height="22"
                                                    ToolTip="Clear selection" Margin="3,0,0,0" Padding="0" BorderThickness="1,1,1,1"
                                                    Command="{TemplateBinding ClearValuesCommand}"
                                                    Visibility="{TemplateBinding IsTextReadOnly, Converter={StaticResource b2v}}" >
                                                <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Center" VerticalAlignment="Center">
                                                    <Image Source="../../Images/small_cancel.png" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" ></Image>
                                                    <Label FontSize="11" Padding="0" Foreground="Gray" Content="Clear"></Label>
                                                </StackPanel>
                                            </Button>
                                        </StackPanel>
                                    </StackPanel>
                                </Border>
                            </controls:a7Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="xctk:DateTimePicker.IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="Transparent" />-->
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="_calendarToggleButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- =============================================================================== -->
    <!-- DateTimePicker                   for a7DataForm (ugly workaroung, so on disabled the bg is white, transparent doesn't work, dunno why                                                -->
    <!-- =============================================================================== -->

    <Style TargetType="{x:Type xctk:DateTimePicker}" x:Key="DateTimePickerStyleForDataForm">
        <Setter Property="Foreground" Value="#FF333333" />
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="TextAlignment" Value="Left" />
        <Setter Property="TimeWatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="WatermarkTemplate" Value="{StaticResource DefaultWatermarkTemplate}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type controls:a7DateTimePicker}">
                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="Transparent" 
                            Padding="{TemplateBinding Padding}">
                        <Grid>
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <Grid.Resources>
                                    <!-- Button Template -->
                                    <ControlTemplate x:Key="DropDownButtonTemplate" TargetType="ToggleButton">
                                        <Grid>
                                            <!--Start UI-->
                                            <Grid Height="20" Width="20" 
                                                  HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0" 
                                                  Background="Transparent" 
                                                  FlowDirection="LeftToRight">
                                                <Border x:Name="Background" Width="18" HorizontalAlignment="Right" Background="White"  BorderBrush="{TemplateBinding BorderBrush}" >
                                                    <Image Source="../Images/calendar.png" HorizontalAlignment="Center" Width="16" Height="16" SnapsToDevicePixels="True"></Image>
                                                </Border>
                                            </Grid>
                                            <!--End UI-->
                                        </Grid>
                                        <ControlTemplate.Triggers>
                                            <Trigger Property="Button.IsMouseOver" Value="true">
                                                <Setter TargetName="Background" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                                                <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                                            </Trigger>
                                            <Trigger Property="Button.IsPressed" Value="true">
                                                <Setter TargetName="Background" Property="Background" Value="{StaticResource IsSelectedBackgroundBrush}" />
                                                <Setter TargetName="Background" Property="BorderBrush" Value="{StaticResource IsSelectedBorderBrush}" />
                                            </Trigger>
                                        </ControlTemplate.Triggers>
                                    </ControlTemplate>
                                </Grid.Resources>
                                <TextBox x:Name="TextBox"                                                                       
                                            Grid.Row="0" Grid.Column="0" 
                                                   Padding="0"
                                                   Margin="0"
                                                   Background="{TemplateBinding Background}"
                                            Foreground="{TemplateBinding Foreground}"
                                            BorderThickness="0"
                                                   BorderBrush="Transparent"
                                            Text="{Binding DateTimeText, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}" 
                                            FontFamily="{TemplateBinding FontFamily}"
                                            FontSize="{TemplateBinding FontSize}"
                                            FontStyle="{TemplateBinding FontStyle}"
                                         IsReadOnly="{TemplateBinding IsTextReadOnly}"
                                            HorizontalContentAlignment="Stretch"
                                            VerticalContentAlignment="Center" >
                                    <TextBox.Style>
                                        <Style TargetType="{x:Type TextBox}">
                                            <Setter Property="OverridesDefaultStyle" Value="True"/>
                                            <Setter Property="Control.Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBoxBase">
                                                        <Border Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" 
                                             BorderBrush="{TemplateBinding BorderBrush}" 
                                             Background="{TemplateBinding Background}" 
                                             SnapsToDevicePixels="true">
                                                            <ScrollViewer Name="PART_ContentHost" Background="{TemplateBinding Background}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsEnabled" Value="False">
                                                                <!--<Setter Value="{Binding Background, RelativeSource={RelativeSource TemplatedParent}" Property="Background" />-->
                                                                <Setter Value="White" Property="Background" />
                                                                <Setter Value="Black" Property="Foreground" />
                                                                <Setter TargetName="PART_ContentHost" Property="Background" Value="White"/>
                                                            </Trigger>
                                                            <Trigger Property="IsReadOnly" Value="True">
                                                                <Setter Value="White" Property="Background" />
                                                                <Setter Value="Black" Property="Foreground" />
                                                                <Setter TargetName="PART_ContentHost" Property="Background" Value="White"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </TextBox.Style>
                                </TextBox>
                                <ToggleButton x:Name="_calendarToggleButton"
                                      Grid.Column="1"
                                      Background="Transparent"
                                      BorderThickness="{TemplateBinding BorderThickness}" 
                                      BorderBrush="{TemplateBinding BorderBrush}"
                                      Margin="0"
                                      IsChecked="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                      Template="{StaticResource DropDownButtonTemplate}"
                                      IsHitTestVisible="{Binding IsOpen, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}"
                                      IsEnabled="{Binding IsReadOnly, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource InverseBoolConverter}}" >

                                </ToggleButton>
                            </Grid>
                            <controls:a7Popup IsTopmost="True" IsOpen="{Binding IsChecked, ElementName=_calendarToggleButton}" StaysOpen="False">
                                <Border BorderThickness="1" Background="{StaticResource PopupBackgroundBrush}" BorderBrush="{StaticResource PopupDarkBorderBrush}" Padding="3">
                                    <StackPanel>
                                        <StackPanel Orientation="Horizontal">
                                            <StackPanel>
                                                <Calendar x:Name="PART_Calendar" BorderThickness="0" />
                                                <xctk:TimePicker x:Name="PART_TimeUpDown"
                                                        Visibility="{TemplateBinding HasTime, Converter={StaticResource b2v}}"
                                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                        Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                                        Format="{TemplateBinding TimeFormat}"
                                                        FormatString="{TemplateBinding TimeFormatString}"
                                                        Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Watermark="{TemplateBinding TimeWatermark}"
                                                        WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" />
                                            </StackPanel>
                                            <StackPanel Visibility="{TemplateBinding TwoDatesSelectable, Converter={StaticResource b2v}}">
                                                <Calendar x:Name="PART_Calendar2" BorderThickness="0"  />
                                                <xctk:TimePicker x:Name="PART_TimeUpDown2"
                                                        Visibility="{TemplateBinding HasTime, Converter={StaticResource b2v}}"
                                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}"
                                                        Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" 
                                                        Format="{TemplateBinding TimeFormat}"
                                                        FormatString="{TemplateBinding TimeFormatString}"
                                                        Value="{Binding Value, RelativeSource={RelativeSource TemplatedParent}}"
                                                        Watermark="{TemplateBinding TimeWatermark}"
                                                        WatermarkTemplate="{TemplateBinding TimeWatermarkTemplate}" />
                                            </StackPanel>
                                        </StackPanel>
                                        <Button HorizontalAlignment="Right" Width="70"  x:Name="bClear" Template="{StaticResource PopupButtonTemplate}" Height="16"
                                                    ToolTip="Clear selection." Margin="3,0,0,0" Padding="0" BorderThickness="1,1,1,1"
                                                Command="{TemplateBinding ClearValuesCommand}"
                                                   Visibility="{TemplateBinding IsTextReadOnly, Converter={StaticResource b2v}}"
                                                 >
                                            <StackPanel Orientation="Horizontal" Margin="0" HorizontalAlignment="Center">
                                                <Image Source="../Images/small_cancel.png" HorizontalAlignment="Right" Width="15" Height="15" VerticalAlignment="Center" ></Image>
                                                <Label FontSize="10" Padding="0" Foreground="Gray" Content="Clear"></Label>
                                            </StackPanel>
                                        </Button>
                                    </StackPanel>
                                </Border>
                            </controls:a7Popup>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="xctk:DateTimePicker.IsEnabled" Value="False">
                            <!--<Setter TargetName="border" Property="BorderBrush" Value="Transparent" />-->
                            <Setter TargetName="border" Property="Background" Value="Transparent" />
                            <Setter TargetName="_calendarToggleButton" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>