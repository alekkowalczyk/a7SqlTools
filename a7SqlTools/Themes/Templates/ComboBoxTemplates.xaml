<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="CommonBrushes.xaml"/>
    </ResourceDictionary.MergedDictionaries>
    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border
	              x:Name="OuterBorder" 
	              Grid.ColumnSpan="2"
	              BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
	              BorderThickness="1" >
            </Border>
            <Border 
                x:Name="InnerBorder"
	              Grid.Column="1"
	              CornerRadius="0,0,0,0" 
	              Margin="0" 
	              Background="{TemplateBinding Background}"
	              BorderBrush="{TemplateBinding BorderBrush}"
	              BorderThickness="1" />
            <Path 
	              x:Name="Arrow"
	              Grid.Column="1"     
	              Fill="Gray"
	              HorizontalAlignment="Center"
	              VerticalAlignment="Center"
	              Data="M 0 0 L 4 4 L 8 0 Z"/>
            <!--<Path 
	              x:Name="Arrow"
	              Grid.Column="1"     
	              Fill="Gray"
	              HorizontalAlignment="Center"
	              VerticalAlignment="Center"
	              Data="M 0 0 L 4 4 L 8 0 Z"/>-->
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="true">
                <Setter TargetName="OuterBorder" Property="Background" Value="{StaticResource IsSelectedBackgroundBrush}" />
                <Setter TargetName="OuterBorder" Property="BorderBrush" Value="{StaticResource IsSelectedBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="Background" Value="{StaticResource IsSelectedBackgroundBrush}" />
                <Setter TargetName="InnerBorder" Property="BorderBrush" Value="{StaticResource IsSelectedBorderBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxDisabledToggleButton" TargetType="Label">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border
	              x:Name="OuterBorder" 
	              Grid.ColumnSpan="2"
	              BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
	              BorderThickness="1" >
            </Border>
            <Border 
                x:Name="InnerBorder"
	              Grid.Column="1"
	              CornerRadius="0,0,0,0" 
	              Margin="0" 
	              Background="{TemplateBinding Background}"
	              BorderBrush="{TemplateBinding BorderBrush}"
	              BorderThickness="1" />
            <Path 
	  x:Name="Arrow"
	  Grid.Column="1"     
	  Fill="{StaticResource ComboDisabledForegroundBrush}"
	  HorizontalAlignment="Center"
	  VerticalAlignment="Center"
	  Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource ComboDisabledForegroundBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxReadOnlyToggleButton" TargetType="Label">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <Border
	              x:Name="OuterBorder" 
	              Grid.ColumnSpan="2"
	              BorderBrush="{TemplateBinding BorderBrush}"
                  Background="{TemplateBinding Background}"
	              BorderThickness="1" >
            </Border>
            <Border 
                x:Name="InnerBorder"
	              Grid.Column="0"
	              CornerRadius="0,0,0,0" 
	              Margin="0" 
	              BorderThickness="0,0,0,0" />
            <Path 
	              x:Name="Arrow"
	              Grid.Column="1"     
	              Fill="LightGray"
	              HorizontalAlignment="Center"
	              VerticalAlignment="Center"
	              Data="M 0 0 L 4 4 L 8 0 Z"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}" />
    </ControlTemplate>

    <Style x:Key="CustomComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="Black"/>
        <Setter Property="BorderBrush" Value="#000000"/>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Background" Value="Blue"/>
            </Trigger>
            <Trigger Property="IsReadOnly" Value="False">
                <Setter Property="Background" Value="Green"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="CustomComboBox" TargetType="ComboBox">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <ToggleButton 
						x:Name="ToggleButton"
                        Grid.ColumnSpan="2"
						Template="{StaticResource ComboBoxToggleButton}" 
						Focusable="false"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
						IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
						ClickMode="Press"
						>
            </ToggleButton>
            <Label
							x:Name="DisabledToggleButton"
                            Grid.ColumnSpan="2"
                            Height="{TemplateBinding Height}"
							Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
							Template="{StaticResource ComboBoxDisabledToggleButton}"
							Visibility="Collapsed"
							>
            </Label>
            <Label
						x:Name="ReadOnlyToggleButton"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Stretch"
						Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
						Template="{StaticResource ComboBoxReadOnlyToggleButton}"
						Visibility="Collapsed"
						>
            </Label>
            <Border SnapsToDevicePixels="True"
                    Grid.Column="0"
                    BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter
						        Name="ContentSite"
						        IsHitTestVisible="False" 
                         
						        Content="{TemplateBinding SelectionBoxItem}"
						        ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						        ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						        Margin="7,0,0,0"
						        VerticalAlignment="Center"
						        HorizontalAlignment="Left" />
            </Border>
            <TextBox x:Name="PART_EditableTextBox"
							Style="{x:Null}" 
							Template="{StaticResource ComboBoxTextBox}" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Center" 
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
							Margin="3,3,23,3"
							Focusable="True" 
							Background="{TemplateBinding Background}"
							Visibility="Hidden"
							IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup 
							Name="Popup"
							Placement="Bottom"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							AllowsTransparency="True" 
							Focusable="False"
							PopupAnimation="Slide">
                <Grid 
							  Name="DropDown"
							  SnapsToDevicePixels="True"                
							  MinWidth="{TemplateBinding ActualWidth}"
							  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
									x:Name="DropDownBorder"
                                    Background="White"
									BorderThickness="1"
									BorderBrush="{TemplateBinding BorderBrush}"/>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Foreground" Value="{StaticResource ComboDisabledForegroundBrush}"/>
                <Setter Property="Background" Value="Transparent"/>
				<Setter TargetName="ToggleButton" Property="ToggleButton.Visibility" Value="Collapsed"/>
                <Setter TargetName="DisabledToggleButton" Property="ToggleButton.Visibility" Value="Visible"/>
                <Setter TargetName="DisabledToggleButton" Property="ToggleButton.Background" Value="Transparent"/>-->
                <Setter TargetName="ToggleButton" Property="ToggleButton.Visibility" Value="Collapsed"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter TargetName="ReadOnlyToggleButton" Property="ToggleButton.Visibility" Value="Visible"/>
                <Setter TargetName="ReadOnlyToggleButton" Property="ToggleButton.Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="ComboBox.IsReadOnly" Value="true">
                <Setter TargetName="ToggleButton" Property="ToggleButton.Visibility" Value="Collapsed"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter TargetName="ReadOnlyToggleButton" Property="ToggleButton.Visibility" Value="Visible"/>
                <Setter TargetName="ReadOnlyToggleButton" Property="ToggleButton.Background" Value="Transparent"/>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"
			   Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <DataTemplate x:Key="CustomComboItemTemplate">
        <StackPanel Background="Transparent" Orientation="Horizontal" Margin="0"  >
            <Label Content="{Binding Path=DisplayName}" Margin="0" Padding="0"/>
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="CustomListItemTemplate">
        <StackPanel Background="Transparent" Orientation="Horizontal" Margin="0" >
            <Label Content="{Binding Path=DisplayName}" Margin="5,0,0,0" Padding="0"/>
        </StackPanel>
    </DataTemplate>

    <Style x:Key="CustomListItemStyle" TargetType="{x:Type ListBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <!--<Setter Property="Height" Value="22" />-->
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"></Setter>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"></Setter>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBoxItem}">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="True" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource IsSelectedBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IsSelectedBorderBrush}" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="CustomComboItemStyle" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="IsEnabled" Value="{Binding IsEnabled}"></Setter>
        <Setter Property="ToolTip" Value="{Binding ToolTip}"></Setter>
        <Setter Property="ToolTipService.ShowOnDisabled" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="True" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="CustomComboItemStyleNoToolTip" TargetType="{x:Type ComboBoxItem}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Height" Value="22" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Name="Border" Padding="2" SnapsToDevicePixels="True" BorderBrush="Transparent" BorderThickness="1" CornerRadius="2">
                        <ContentPresenter></ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource IsOverBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource IsOverBorderBrush}" />
                            <Setter Property="TextElement.Foreground" Value="Black" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False" >
                            <Setter Property="Foreground" Value="#888888" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <ControlTemplate x:Key="ColumnComboBox" TargetType="ComboBox">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="17" />
            </Grid.ColumnDefinitions>
            <ToggleButton 
						x:Name="ToggleButton"
                        Grid.ColumnSpan="2"
						Template="{StaticResource ComboBoxToggleButton}" 
						Focusable="false"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        Background="{TemplateBinding Background}"
						IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
						ClickMode="Press"
						>
            </ToggleButton>
            <Label
							x:Name="DisabledToggleButton"
                            Grid.ColumnSpan="2"
							Background="{TemplateBinding Background}"
							Template="{StaticResource ComboBoxDisabledToggleButton}"
							Visibility="Collapsed"
							>
            </Label>
            <Label
						x:Name="ReadOnlyToggleButton"
                        Grid.ColumnSpan="2"
                        VerticalAlignment="Stretch"
						Background="{TemplateBinding Background}"
                        BorderBrush="Transparent"
						Template="{StaticResource ComboBoxReadOnlyToggleButton}"
						Visibility="Collapsed"
						>
            </Label>
            <Border SnapsToDevicePixels="True"
                    Grid.Column="0"
                BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}">
                <ContentPresenter
						Name="ContentSite"
						IsHitTestVisible="False" 
                        
						Content="{TemplateBinding SelectionBoxItem}"
						ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
						ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
						Margin="5,0,0,0"
						VerticalAlignment="Center"
						HorizontalAlignment="Left" />
            </Border>
            <TextBox x:Name="PART_EditableTextBox"
							Style="{x:Null}" 
							Template="{StaticResource ComboBoxTextBox}" 
							HorizontalAlignment="Left" 
							VerticalAlignment="Center" 
                            BorderBrush="Transparent"
                            BorderThickness="{TemplateBinding BorderThickness}"
							Margin="3,3,23,3"
							Focusable="True" 
							Background="{TemplateBinding Background}"
							Visibility="Hidden"
							IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <Popup 
							Name="Popup"
							Placement="Bottom"
							IsOpen="{TemplateBinding IsDropDownOpen}"
							AllowsTransparency="True" 
							Focusable="False"
							PopupAnimation="Slide">
                <Grid 
							  Name="DropDown"
							  SnapsToDevicePixels="True"                
							  MinWidth="{TemplateBinding ActualWidth}"
							  MaxHeight="{TemplateBinding MaxDropDownHeight}">
                    <Border 
									x:Name="DropDownBorder"
									Background="White"
									BorderThickness="1"
									BorderBrush="{TemplateBinding BorderBrush}"/>
                    <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                    </ScrollViewer>
                </Grid>
            </Popup>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="HasItems" Value="false">
                <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Foreground" Value="{StaticResource ComboDisabledForegroundBrush}"/>
                <Setter TargetName="ToggleButton" Property="ToggleButton.Visibility" Value="Collapsed"/>
                <Setter TargetName="DisabledToggleButton" Property="ToggleButton.Visibility" Value="Visible"/>
            </Trigger>
            <Trigger Property="ComboBox.IsReadOnly" Value="true">
                <Setter TargetName="ToggleButton" Property="ToggleButton.Visibility" Value="Collapsed"/>
                <Setter TargetName="ReadOnlyToggleButton" Property="ToggleButton.Visibility" Value="Visible"/>
                <Setter Property="BorderBrush" Value="Transparent"></Setter>
                <Setter Property="Background" Value="Transparent"></Setter>
            </Trigger>
            <Trigger Property="IsGrouping" Value="true">
                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
            </Trigger>
            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
            </Trigger>
            <Trigger Property="IsEditable"
			   Value="true">
                <Setter Property="IsTabStop" Value="false"/>
                <Setter TargetName="PART_EditableTextBox" Property="Visibility"    Value="Visible"/>
                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

</ResourceDictionary>

